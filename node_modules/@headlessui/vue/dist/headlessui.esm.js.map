{
  "version": 3,
  "sources": ["../src/components/combobox/combobox.ts", "../src/utils/render.ts", "../src/utils/match.ts", "../src/hooks/use-id.ts", "../src/utils/calculate-active-index.ts", "../src/utils/dom.ts", "../src/internal/open-closed.ts", "../src/hooks/use-resolve-button-type.ts", "../src/hooks/use-tree-walker.ts", "../src/utils/owner.ts", "../src/utils/focus-management.ts", "../src/hooks/use-window-event.ts", "../src/hooks/use-outside-click.ts", "../src/internal/visually-hidden.ts", "../src/utils/form.ts", "../src/components/dialog/dialog.ts", "../src/hooks/use-focus-trap.ts", "../src/hooks/use-event-listener.ts", "../src/hooks/use-inert-others.ts", "../src/components/portal/portal.ts", "../src/internal/portal-force-root.ts", "../src/internal/stack-context.ts", "../src/components/description/description.ts", "../src/components/disclosure/disclosure.ts", "../src/components/focus-trap/focus-trap.ts", "../src/components/listbox/listbox.ts", "../src/components/menu/menu.ts", "../src/components/popover/popover.ts", "../src/components/radio-group/radio-group.ts", "../src/components/label/label.ts", "../src/components/switch/switch.ts", "../src/components/tabs/tabs.ts", "../src/internal/focus-sentinel.ts", "../src/components/transitions/transition.ts", "../src/utils/once.ts", "../src/utils/disposables.ts", "../src/components/transitions/utils/transition.ts"],
  "sourcesContent": ["import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n  watch,\n  watchEffect,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  PropType,\n  Ref,\n  UnwrapNestedRefs,\n} from 'vue'\n\nimport { Features, render, omit, compact } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { sortByDomNode } from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { VisuallyHidden } from '../../internal/visually-hidden'\nimport { objectToFormEntries } from '../../utils/form'\n\nenum ComboboxStates {\n  Open,\n  Closed,\n}\n\nenum ValueMode {\n  Single,\n  Multi,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\ntype ComboboxOptionData = {\n  disabled: boolean\n  value: unknown\n  domRef: Ref<HTMLElement | null>\n}\ntype StateDefinition = {\n  // State\n  comboboxState: Ref<ComboboxStates>\n  value: ComputedRef<unknown>\n\n  mode: ComputedRef<ValueMode>\n  nullable: ComputedRef<boolean>\n\n  inputPropsRef: Ref<{ displayValue?: (item: unknown) => string }>\n  optionsPropsRef: Ref<{ static: boolean; hold: boolean }>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  inputRef: Ref<HTMLInputElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ComputedRef<ComboboxOptionData> }[]>\n  activeOptionIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeCombobox(): void\n  openCombobox(): void\n  goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  change(value: unknown): void\n  selectOption(id: string): void\n  selectActiveOption(): void\n  registerOption(id: string, dataRef: ComputedRef<ComboboxOptionData>): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ComboboxContext = Symbol('ComboboxContext') as InjectionKey<StateDefinition>\n\nfunction useComboboxContext(component: string) {\n  let context = inject(ComboboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Combobox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useComboboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Combobox = defineComponent({\n  name: 'Combobox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n    name: { type: String },\n    nullable: { type: Boolean, default: false },\n    multiple: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let comboboxState = ref<StateDefinition['comboboxState']['value']>(ComboboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let inputRef = ref<StateDefinition['inputRef']['value']>(null) as StateDefinition['inputRef']\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null) as StateDefinition['buttonRef']\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(\n      null\n    ) as StateDefinition['optionsRef']\n    let optionsPropsRef = ref<StateDefinition['optionsPropsRef']['value']>({\n      static: false,\n      hold: false,\n    }) as StateDefinition['optionsPropsRef']\n    let options = ref<StateDefinition['options']['value']>([])\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n    let defaultToFirstOption = ref(false)\n\n    function adjustOrderedState(\n      adjustment: (\n        options: UnwrapNestedRefs<StateDefinition['options']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['options']['value']> = (i) => i\n    ) {\n      let currentActiveOption =\n        activeOptionIndex.value !== null ? options.value[activeOptionIndex.value] : null\n\n      let sortedOptions = sortByDomNode(adjustment(options.value.slice()), (option) =>\n        dom(option.dataRef.domRef)\n      )\n\n      // If we inserted an option before the current active option then the active option index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveOptionIndex = currentActiveOption\n        ? sortedOptions.indexOf(currentActiveOption)\n        : null\n\n      // Reset to `null` in case the currentActiveOption was removed.\n      if (adjustedActiveOptionIndex === -1) {\n        adjustedActiveOptionIndex = null\n      }\n\n      return {\n        options: sortedOptions,\n        activeOptionIndex: adjustedActiveOptionIndex,\n      }\n    }\n\n    let value = computed(() => props.modelValue)\n    let mode = computed(() => (props.multiple ? ValueMode.Multi : ValueMode.Single))\n    let nullable = computed(() => props.nullable)\n\n    let api = {\n      comboboxState,\n      value,\n      mode,\n      nullable,\n      inputRef,\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      change(value: unknown) {\n        emit('update:modelValue', value)\n      },\n      activeOptionIndex: computed(() => {\n        if (\n          defaultToFirstOption.value &&\n          activeOptionIndex.value === null &&\n          options.value.length > 0\n        ) {\n          let localActiveOptionIndex = options.value.findIndex((option) => !option.dataRef.disabled)\n          if (localActiveOptionIndex !== -1) {\n            return localActiveOptionIndex\n          }\n        }\n\n        return activeOptionIndex.value\n      }),\n      activationTrigger,\n      inputPropsRef: ref<StateDefinition['inputPropsRef']['value']>({ displayValue: undefined }),\n      optionsPropsRef,\n      closeCombobox() {\n        defaultToFirstOption.value = false\n\n        if (props.disabled) return\n        if (comboboxState.value === ComboboxStates.Closed) return\n        comboboxState.value = ComboboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openCombobox() {\n        defaultToFirstOption.value = true\n\n        if (props.disabled) return\n        if (comboboxState.value === ComboboxStates.Open) return\n\n        // Check if we have a selected value that we can make active.\n        let optionIdx = options.value.findIndex((option) => {\n          let optionValue = toRaw(option.dataRef.value)\n          let selected = match(mode.value, {\n            [ValueMode.Single]: () => toRaw(api.value.value) === toRaw(optionValue),\n            [ValueMode.Multi]: () =>\n              (toRaw(api.value.value) as unknown[]).includes(toRaw(optionValue)),\n          })\n\n          return selected\n        })\n\n        if (optionIdx !== -1) {\n          activeOptionIndex.value = optionIdx\n        }\n\n        comboboxState.value = ComboboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        defaultToFirstOption.value = false\n\n        if (props.disabled) return\n        if (\n          optionsRef.value &&\n          !optionsPropsRef.value.static &&\n          comboboxState.value === ComboboxStates.Closed\n        ) {\n          return\n        }\n\n        let adjustedState = adjustOrderedState()\n\n        // It's possible that the activeOptionIndex is set to `null` internally, but\n        // this means that we will fallback to the first non-disabled option by default.\n        // We have to take this into account.\n        if (adjustedState.activeOptionIndex === null) {\n          let localActiveOptionIndex = adjustedState.options.findIndex(\n            (option) => !option.dataRef.disabled\n          )\n\n          if (localActiveOptionIndex !== -1) {\n            adjustedState.activeOptionIndex = localActiveOptionIndex\n          }\n        }\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.options,\n            resolveActiveIndex: () => adjustedState.activeOptionIndex,\n            resolveId: (option) => option.id,\n            resolveDisabled: (option) => option.dataRef.disabled,\n          }\n        )\n\n        activeOptionIndex.value = nextActiveOptionIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        options.value = adjustedState.options\n      },\n      syncInputValue() {\n        let value = api.value.value\n        if (!dom(api.inputRef)) return\n        let displayValue = api.inputPropsRef.value.displayValue\n\n        if (typeof displayValue === 'function') {\n          api.inputRef!.value!.value = displayValue(value) ?? ''\n        } else if (typeof value === 'string') {\n          api.inputRef!.value!.value = value\n        } else {\n          api.inputRef!.value!.value = ''\n        }\n      },\n      selectOption(id: string) {\n        let option = options.value.find((item) => item.id === id)\n        if (!option) return\n\n        let { dataRef } = option\n        emit(\n          'update:modelValue',\n          match(mode.value, {\n            [ValueMode.Single]: () => dataRef.value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(dataRef.value)\n\n              let idx = copy.indexOf(raw)\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n        api.syncInputValue()\n      },\n      selectActiveOption() {\n        if (api.activeOptionIndex.value === null) return\n\n        let { dataRef, id } = options.value[api.activeOptionIndex.value]\n        emit(\n          'update:modelValue',\n          match(mode.value, {\n            [ValueMode.Single]: () => dataRef.value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(dataRef.value)\n\n              let idx = copy.indexOf(raw)\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n        api.syncInputValue()\n\n        // It could happen that the `activeOptionIndex` stored in state is actually null,\n        // but we are getting the fallback active option back instead.\n        api.goToOption(Focus.Specific, id)\n      },\n      registerOption(id: string, dataRef: ComboboxOptionData) {\n        let option = { id, dataRef }\n        let adjustedState = adjustOrderedState((options) => [...options, option])\n\n        // Check if we have a selected value that we can make active.\n        if (activeOptionIndex.value === null) {\n          let optionValue = (dataRef.value as any).value\n          let selected = match(mode.value, {\n            [ValueMode.Single]: () => toRaw(api.value.value) === toRaw(optionValue),\n            [ValueMode.Multi]: () =>\n              (toRaw(api.value.value) as unknown[]).includes(toRaw(optionValue)),\n          })\n\n          if (selected) {\n            adjustedState.activeOptionIndex = adjustedState.options.indexOf(option)\n          }\n        }\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      unregisterOption(id: string) {\n        let adjustedState = adjustOrderedState((options) => {\n          let idx = options.findIndex((a) => a.id === id)\n          if (idx !== -1) options.splice(idx, 1)\n          return options\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick([inputRef, buttonRef, optionsRef], () => {\n      if (comboboxState.value !== ComboboxStates.Open) return\n      api.closeCombobox()\n    })\n\n    watch([api.value, api.inputRef], () => api.syncInputValue(), {\n      immediate: true,\n    })\n\n    // Only sync the input value on close as typing into the input will trigger it to open\n    // causing a resync of the input value with the currently stored, stale value that is\n    // one character behind since the input's value has just been updated by the browser\n    watch(\n      api.comboboxState,\n      (state) => {\n        if (state === ComboboxStates.Closed) {\n          api.syncInputValue()\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ComboboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(comboboxState.value, {\n          [ComboboxStates.Open]: State.Open,\n          [ComboboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let activeOption = computed(() =>\n      api.activeOptionIndex.value === null\n        ? null\n        : (options.value[api.activeOptionIndex.value].dataRef.value as any)\n    )\n\n    return () => {\n      let { name, modelValue, disabled, ...incomingProps } = props\n      let slot = {\n        open: comboboxState.value === ComboboxStates.Open,\n        disabled,\n        activeIndex: api.activeOptionIndex.value,\n        activeOption: activeOption.value,\n      }\n\n      return h(Fragment, [\n        ...(name != null && modelValue != null\n          ? objectToFormEntries({ [name]: modelValue }).map(([name, value]) =>\n              h(\n                VisuallyHidden,\n                compact({\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            )\n          : []),\n        render({\n          props: omit(incomingProps, ['nullable', 'multiple', 'onUpdate:modelValue']),\n          slot,\n          slots,\n          attrs,\n          name: 'Combobox',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxLabel = defineComponent({\n  name: 'ComboboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  setup(props, { attrs, slots }) {\n    let api = useComboboxContext('ComboboxLabel')\n    let id = `headlessui-combobox-label-${useId()}`\n\n    function handleClick() {\n      dom(api.inputRef)?.focus({ preventScroll: true })\n    }\n\n    return () => {\n      let slot = {\n        open: api.comboboxState.value === ComboboxStates.Open,\n        disabled: api.disabled.value,\n      }\n\n      let ourProps = { id, ref: api.labelRef, onClick: handleClick }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxLabel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxButton = defineComponent({\n  name: 'ComboboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxButton')\n    let id = `headlessui-combobox-button-${useId()}`\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.comboboxState.value === ComboboxStates.Open) {\n        api.closeCombobox()\n      } else {\n        event.preventDefault()\n        api.openCombobox()\n      }\n\n      nextTick(() => dom(api.inputRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleKeydown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.comboboxState.value === ComboboxStates.Closed) {\n            api.openCombobox()\n            // TODO: We can't do this outside next frame because the options aren't rendered yet\n            // But doing this in next frame results in a flicker because the dom mutations are async here\n            // Basically:\n            // Sync -> no option list yet\n            // Next frame -> option list already rendered with selection -> dispatch -> next frame -> now we have the focus on the right element\n\n            // TODO: The spec here is underspecified. There's mention of skipping to the next item when autocomplete has suggested something but nothing regarding a non-autocomplete selection/value\n            nextTick(() => {\n              if (!api.value.value) {\n                api.goToOption(Focus.First)\n              }\n            })\n          }\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.comboboxState.value === ComboboxStates.Closed) {\n            api.openCombobox()\n            nextTick(() => {\n              if (!api.value.value) {\n                api.goToOption(Focus.Last)\n              }\n            })\n          }\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n\n        case Keys.Escape:\n          event.preventDefault()\n          if (api.optionsRef.value && !api.optionsPropsRef.value.static) {\n            event.stopPropagation()\n          }\n          api.closeCombobox()\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = {\n        open: api.comboboxState.value === ComboboxStates.Open,\n        disabled: api.disabled.value,\n      }\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        tabindex: '-1',\n        'aria-haspopup': true,\n        'aria-controls': dom(api.optionsRef)?.id,\n        'aria-expanded': api.disabled.value\n          ? undefined\n          : api.comboboxState.value === ComboboxStates.Open,\n        'aria-labelledby': api.labelRef.value ? [dom(api.labelRef)?.id, id].join(' ') : undefined,\n        disabled: api.disabled.value === true ? true : undefined,\n        onKeydown: handleKeydown,\n        onClick: handleClick,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxInput = defineComponent({\n  name: 'ComboboxInput',\n  props: {\n    as: { type: [Object, String], default: 'input' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    displayValue: { type: Function as PropType<(item: unknown) => string> },\n  },\n  emits: {\n    change: (_value: Event & { target: HTMLInputElement }) => true,\n  },\n  setup(props, { emit, attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxInput')\n    let id = `headlessui-combobox-input-${useId()}`\n    api.inputPropsRef = computed(() => props)\n\n    expose({ el: api.inputRef, $el: api.inputRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        case Keys.Backspace:\n        case Keys.Delete:\n          if (api.mode.value !== ValueMode.Single) return\n          if (!api.nullable.value) return\n\n          let input = event.currentTarget as HTMLInputElement\n          requestAnimationFrame(() => {\n            if (input.value === '') {\n              api.change(null)\n              let options = dom(api.optionsRef)\n              if (options) {\n                options.scrollTop = 0\n              }\n              api.goToOption(Focus.Nothing)\n            }\n          })\n          break\n\n        case Keys.Enter:\n          if (api.comboboxState.value !== ComboboxStates.Open) return\n\n          event.preventDefault()\n          event.stopPropagation()\n\n          if (api.activeOptionIndex.value === null) {\n            api.closeCombobox()\n            return\n          }\n\n          api.selectActiveOption()\n          if (api.mode.value === ValueMode.Single) {\n            api.closeCombobox()\n          }\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return match(api.comboboxState.value, {\n            [ComboboxStates.Open]: () => api.goToOption(Focus.Next),\n            [ComboboxStates.Closed]: () => {\n              api.openCombobox()\n              nextTick(() => {\n                if (!api.value.value) {\n                  api.goToOption(Focus.First)\n                }\n              })\n            },\n          })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return match(api.comboboxState.value, {\n            [ComboboxStates.Open]: () => api.goToOption(Focus.Previous),\n            [ComboboxStates.Closed]: () => {\n              api.openCombobox()\n              nextTick(() => {\n                if (!api.value.value) {\n                  api.goToOption(Focus.Last)\n                }\n              })\n            },\n          })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          if (api.optionsRef.value && !api.optionsPropsRef.value.static) {\n            event.stopPropagation()\n          }\n          api.closeCombobox()\n          break\n\n        case Keys.Tab:\n          api.selectActiveOption()\n          api.closeCombobox()\n          break\n      }\n    }\n\n    function handleChange(event: Event & { target: HTMLInputElement }) {\n      emit('change', event)\n    }\n\n    function handleInput(event: Event & { target: HTMLInputElement }) {\n      api.openCombobox()\n      emit('change', event)\n    }\n\n    return () => {\n      let slot = { open: api.comboboxState.value === ComboboxStates.Open }\n      let ourProps = {\n        'aria-controls': api.optionsRef.value?.id,\n        'aria-expanded': api.disabled ? undefined : api.comboboxState.value === ComboboxStates.Open,\n        'aria-activedescendant':\n          api.activeOptionIndex.value === null\n            ? undefined\n            : api.options.value[api.activeOptionIndex.value]?.id,\n        'aria-multiselectable': api.mode.value === ValueMode.Multi ? true : undefined,\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        id,\n        onKeydown: handleKeyDown,\n        onChange: handleChange,\n        onInput: handleInput,\n        role: 'combobox',\n        type: 'text',\n        tabIndex: 0,\n        ref: api.inputRef,\n      }\n      let incomingProps = omit(props, ['displayValue'])\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        name: 'ComboboxInput',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxOptions = defineComponent({\n  name: 'ComboboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    hold: { type: [Boolean], default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxOptions')\n    let id = `headlessui-combobox-options-${useId()}`\n\n    expose({ el: api.optionsRef, $el: api.optionsRef })\n\n    watchEffect(() => {\n      api.optionsPropsRef.value.static = props.static\n    })\n\n    watchEffect(() => {\n      api.optionsPropsRef.value.hold = props.hold\n    })\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.comboboxState.value === ComboboxStates.Open\n    })\n\n    useTreeWalker({\n      container: computed(() => dom(api.optionsRef)),\n      enabled: computed(() => api.comboboxState.value === ComboboxStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'option') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    return () => {\n      let slot = { open: api.comboboxState.value === ComboboxStates.Open }\n      let ourProps = {\n        'aria-activedescendant':\n          api.activeOptionIndex.value === null\n            ? undefined\n            : api.options.value[api.activeOptionIndex.value]?.id,\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        id,\n        ref: api.optionsRef,\n        role: 'listbox',\n      }\n      let incomingProps = omit(props, ['hold'])\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'ComboboxOptions',\n      })\n    }\n  },\n})\n\nexport let ComboboxOption = defineComponent({\n  name: 'ComboboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useComboboxContext('ComboboxOption')\n    let id = `headlessui-combobox-option-${useId()}`\n    let internalOptionRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalOptionRef, $el: internalOptionRef })\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() =>\n      match(api.mode.value, {\n        [ValueMode.Single]: () => toRaw(api.value.value) === toRaw(props.value),\n        [ValueMode.Multi]: () => (toRaw(api.value.value) as unknown[]).includes(toRaw(props.value)),\n      })\n    )\n\n    let dataRef = computed<ComboboxOptionData>(() => ({\n      disabled: props.disabled,\n      value: props.value,\n      domRef: internalOptionRef,\n    }))\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    watchEffect(() => {\n      if (api.comboboxState.value !== ComboboxStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalOptionRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.selectOption(id)\n      if (api.mode.value === ValueMode.Single) {\n        api.closeCombobox()\n        nextTick(() => dom(api.inputRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      if (api.optionsPropsRef.value.hold) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let ourProps = {\n        id,\n        ref: internalOptionRef,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        // According to the WAI-ARIA best practices, we should use aria-checked for\n        // multi-select,but Voice-Over disagrees. So we use aria-checked instead for\n        // both single and multi-select.\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxOption',\n      })\n    }\n  },\n})\n", "import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...incomingProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(incomingProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(incomingProps)\n              .concat(Object.keys(attrs))\n              .map((line) => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map((line) => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, incomingProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, incomingProps, children)\n}\n\nexport function compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nexport function omit<T extends Record<any, any>, Keys extends keyof T>(\n  object: T,\n  keysToOmit: readonly Keys[] = []\n) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone as Omit<T, Keys>\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n", "export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map((key) => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n", "let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n", "function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex((item) => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item) => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex((item) => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n", "import { Ref, ComponentPublicInstance } from 'vue'\n\nexport function dom<T extends Element | ComponentPublicInstance>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n\n  return '$el' in ref.value ? (ref.value.$el as T | null) : ref.value\n}\n", "import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n", "import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n", "import { watchEffect, ComputedRef } from 'vue'\nimport { getOwnerDocument } from '../utils/owner'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n    let ownerDocument = getOwnerDocument(container)\n    if (!ownerDocument) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = ownerDocument.createTreeWalker(\n      root,\n      NodeFilter.SHOW_ELEMENT,\n      acceptNode,\n      // @ts-expect-error This `false` is a simple small fix for older browsers\n      false\n    )\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n", "import { Ref } from 'vue'\nimport { dom } from './dom'\n\nexport function getOwnerDocument<T extends Element | Ref<Element | null>>(\n  element: T | null | undefined\n) {\n  if (typeof window === 'undefined') return null\n  if (element instanceof Node) return element.ownerDocument\n  if (element?.hasOwnProperty('value')) {\n    let domElement = dom(element)\n    if (domElement) return domElement.ownerDocument\n  }\n\n  return document\n}\n", "import { match } from './match'\nimport { getOwnerDocument } from './owner'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        (selector) => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : (selector) => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === getOwnerDocument(element)?.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select\nlet selectableSelector = ['textarea', 'input'].join(',')\nfunction isSelectableElement(\n  element: Element | null\n): element is HTMLInputElement | HTMLTextAreaElement {\n  return element?.matches?.(selectableSelector) ?? false\n}\n\nexport function sortByDomNode<T>(\n  nodes: T[],\n  resolveKey: (item: T) => HTMLElement | null = (i) => i as unknown as HTMLElement | null\n): T[] {\n  return nodes.slice().sort((aItem, zItem) => {\n    let a = resolveKey(aItem)\n    let z = resolveKey(zItem)\n\n    if (a === null || z === null) return 0\n\n    let position = a.compareDocumentPosition(z)\n\n    if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n    if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n    return 0\n  })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let ownerDocument =\n    (Array.isArray(container)\n      ? container.length > 0\n        ? container[0].ownerDocument\n        : document\n      : container?.ownerDocument) ?? document\n\n  let elements = Array.isArray(container)\n    ? sortByDomNode(container)\n    : getFocusableElements(container)\n  let active = ownerDocument.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== ownerDocument.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  // By default if you <Tab> to a text input or a textarea, the browser will\n  // select all the text once the focus is inside these DOM Nodes. However,\n  // since we are manually moving focus this behaviour is not happening. This\n  // code will make sure that the text gets selected as-if you did it manually.\n  // Note: We only do this when going forward / backward. Not for the\n  // Focus.First or Focus.Last actions. This is similar to the `autoFocus`\n  // behaviour on an input where the input will get focus but won't be\n  // selected.\n  if (focus & (Focus.Next | Focus.Previous) && isSelectableElement(next)) {\n    next.select()\n  }\n\n  return FocusResult.Success\n}\n", "import { watchEffect } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (typeof window === 'undefined') return\n\n  watchEffect((onInvalidate) => {\n    window.addEventListener(type, listener, options)\n    onInvalidate(() => window.removeEventListener(type, listener, options))\n  })\n}\n", "import { useWindowEvent } from './use-window-event'\nimport { Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\n// Polyfill\nfunction microTask(cb: () => void) {\n  if (typeof queueMicrotask === 'function') {\n    queueMicrotask(cb)\n  } else {\n    Promise.resolve()\n      .then(cb)\n      .catch((e) =>\n        setTimeout(() => {\n          throw e\n        })\n      )\n  }\n}\n\ntype Container = Ref<HTMLElement | null> | HTMLElement | null\ntype ContainerCollection = Container[] | Set<Container>\ntype ContainerInput = Container | ContainerCollection\n\nexport enum Features {\n  None = 1 << 0,\n  IgnoreScrollbars = 1 << 1,\n}\n\nexport function useOutsideClick(\n  containers: ContainerInput | (() => ContainerInput),\n  cb: (event: MouseEvent | PointerEvent, target: HTMLElement) => void,\n  features: Features = Features.None\n) {\n  let called = false\n  function handle(event: MouseEvent | PointerEvent) {\n    if (called) return\n    called = true\n    microTask(() => {\n      called = false\n    })\n\n    let target = event.target as HTMLElement\n\n    // Ignore if the target doesn't exist in the DOM anymore\n    if (!target.ownerDocument.documentElement.contains(target)) return\n\n    let _containers = (function resolve(containers): ContainerCollection {\n      if (typeof containers === 'function') {\n        return resolve(containers())\n      }\n\n      if (Array.isArray(containers)) {\n        return containers\n      }\n\n      if (containers instanceof Set) {\n        return containers\n      }\n\n      return [containers]\n    })(containers)\n\n    // Ignore scrollbars:\n    // This is a bit hacky, and is only necessary because we are checking for `pointerdown` and\n    // `mousedown` events. They _are_ being called if you click on a scrollbar. The `click` event\n    // is not called when clicking on a scrollbar, but we can't use that otherwise it won't work\n    // on mobile devices where only pointer events are being used.\n    if ((features & Features.IgnoreScrollbars) === Features.IgnoreScrollbars) {\n      // TODO: We can calculate this dynamically~is. On macOS if you have the \"Automatically based\n      // on mouse or trackpad\" setting enabled, then the scrollbar will float on top and therefore\n      // you can't calculate its with by checking the clientWidth and scrollWidth of the element.\n      // Therefore we are currently hardcoding this to be 20px.\n      let scrollbarWidth = 20\n\n      let viewport = target.ownerDocument.documentElement\n      if (event.clientX > viewport.clientWidth - scrollbarWidth) return\n      if (event.clientX < scrollbarWidth) return\n      if (event.clientY > viewport.clientHeight - scrollbarWidth) return\n      if (event.clientY < scrollbarWidth) return\n    }\n\n    // Ignore if the target exists in one of the containers\n    for (let container of _containers) {\n      if (container === null) continue\n      let domNode = container instanceof HTMLElement ? container : dom(container)\n      if (domNode?.contains(target)) {\n        return\n      }\n    }\n\n    cb(event, target)\n  }\n\n  useWindowEvent('pointerdown', handle)\n  useWindowEvent('mousedown', handle)\n}\n", "import { defineComponent } from 'vue'\nimport { render } from '../utils/render'\n\nexport let VisuallyHidden = defineComponent({\n  name: 'VisuallyHidden',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    return () => {\n      let ourProps = {\n        style: {\n          position: 'absolute',\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          borderWidth: '0',\n          display: 'none',\n        },\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot: {},\n        attrs,\n        slots,\n        name: 'VisuallyHidden',\n      })\n    }\n  },\n})\n", "type Entries = [string, string][]\n\nexport function objectToFormEntries(\n  source: Record<string, any> = {},\n  parentKey: string | null = null,\n  entries: Entries = []\n): Entries {\n  for (let [key, value] of Object.entries(source)) {\n    append(entries, composeKey(parentKey, key), value)\n  }\n\n  return entries\n}\n\nfunction composeKey(parent: string | null, key: string): string {\n  return parent ? parent + '[' + key + ']' : key\n}\n\nfunction append(entries: Entries, key: string, value: any): void {\n  if (Array.isArray(value)) {\n    for (let [subkey, subvalue] of value.entries()) {\n      append(entries, composeKey(key, subkey.toString()), subvalue)\n    }\n  } else if (value instanceof Date) {\n    entries.push([key, value.toISOString()])\n  } else if (typeof value === 'boolean') {\n    entries.push([key, value ? '1' : '0'])\n  } else if (typeof value === 'string') {\n    entries.push([key, value])\n  } else if (typeof value === 'number') {\n    entries.push([key, `${value}`])\n  } else if (value === null || value === undefined) {\n    entries.push([key, ''])\n  } else {\n    objectToFormEntries(value, key, entries)\n  }\n}\n\nexport function attemptSubmit(element: HTMLElement) {\n  let form = (element as any)?.form ?? element.closest('form')\n  if (!form) return\n\n  for (let element of form.elements) {\n    if (\n      (element.tagName === 'INPUT' && element.type === 'submit') ||\n      (element.tagName === 'BUTTON' && element.type === 'submit') ||\n      (element.nodeName === 'INPUT' && element.type === 'image')\n    ) {\n      // If you press `enter` in a normal input[type='text'] field, then the form will submit by\n      // searching for the a submit element and \"click\" it. We could also use the\n      // `form.requestSubmit()` function, but this has a downside where an `event.preventDefault()`\n      // inside a `click` listener on the submit button won't stop the form from submitting.\n      element.click()\n      return\n    }\n  }\n}\n", "// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useOutsideClick, Features as OutsideClickFeatures } from '../../hooks/use-outside-click'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useEventListener } from '../../hooks/use-event-listener'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n  panelRef: Ref<HTMLDivElement | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: { close: (_close: boolean) => true },\n  setup(props, { emit, attrs, slots, expose }) {\n    let nestedDialogCount = ref(0)\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    let containers = ref<Set<Ref<HTMLElement | null>>>(new Set())\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let ownerDocument = computed(() => getOwnerDocument(internalDialogRef))\n\n    expose({ el: internalDialogRef, $el: internalDialogRef })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (open.value ? DialogStates.Open : DialogStates.Closed))\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return dialogState.value === DialogStates.Open\n    })\n\n    let enabled = computed(() => dialogState.value === DialogStates.Open)\n\n    let hasNestedDialogs = computed(() => nestedDialogCount.value > 1) // 1 is the current dialog\n    let hasParentDialog = inject(DialogContext, null) !== null\n\n    // If there are multiple dialogs, then you can be the root, the leaf or one\n    // in between. We only care abou whether you are the top most one or not.\n    let position = computed(() => (!hasNestedDialogs.value ? 'leaf' : 'parent'))\n\n    let previousElement = useFocusTrap(\n      internalDialogRef,\n      computed(() => {\n        return enabled.value\n          ? match(position.value, {\n              parent: FocusTrapFeatures.RestoreFocus,\n              leaf: FocusTrapFeatures.All & ~FocusTrapFeatures.FocusLock,\n            })\n          : FocusTrapFeatures.None\n      }),\n      computed(() => ({\n        initialFocus: ref(props.initialFocus),\n        containers,\n      }))\n    )\n    useInertOthers(\n      internalDialogRef,\n      computed(() => (hasNestedDialogs.value ? enabled.value : false))\n    )\n    useStackProvider({\n      type: 'Dialog',\n      element: internalDialogRef,\n      onUpdate: (message, type, element) => {\n        if (type !== 'Dialog') return\n\n        return match(message, {\n          [StackMessage.Add]() {\n            containers.value.add(element)\n            nestedDialogCount.value += 1\n          },\n          [StackMessage.Remove]() {\n            containers.value.delete(element)\n            nestedDialogCount.value -= 1\n          },\n        })\n      },\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      panelRef: ref(null),\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useOutsideClick(\n      () => {\n        // Third party roots\n        let rootContainers = Array.from(\n          ownerDocument.value?.querySelectorAll('body > *') ?? []\n        ).filter((container) => {\n          if (!(container instanceof HTMLElement)) return false // Skip non-HTMLElements\n          if (container.contains(previousElement.value)) return false // Skip if it is the main app\n          if (api.panelRef.value && container.contains(api.panelRef.value)) return false\n          return true // Keep\n        })\n\n        return [...rootContainers, api.panelRef.value ?? internalDialogRef.value] as HTMLElement[]\n      },\n\n      (_event, target) => {\n        if (dialogState.value !== DialogStates.Open) return\n        if (hasNestedDialogs.value) return\n\n        api.close()\n        nextTick(() => target?.focus())\n      },\n      OutsideClickFeatures.IgnoreScrollbars\n    )\n\n    // Handle `Escape` to close\n    useEventListener(ownerDocument.value?.defaultView, 'keydown', (event) => {\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (hasNestedDialogs.value) return\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    })\n\n    // Scroll lock\n    watchEffect((onInvalidate) => {\n      if (dialogState.value !== DialogStates.Open) return\n      if (hasParentDialog) return\n\n      let owner = ownerDocument.value\n      if (!owner) return\n\n      let documentElement = owner?.documentElement\n      let ownerWindow = owner.defaultView ?? window\n\n      let overflow = documentElement.style.overflow\n      let paddingRight = documentElement.style.paddingRight\n\n      let scrollbarWidth = ownerWindow.innerWidth - documentElement.clientWidth\n\n      documentElement.style.overflow = 'hidden'\n      documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        documentElement.style.overflow = overflow\n        documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect((onInvalidate) => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver((entries) => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    function handleClick(event: MouseEvent) {\n      event.stopPropagation()\n    }\n\n    return () => {\n      let ourProps = {\n        // Manually passthrough the attributes, because Vue can't automatically pass\n        // it to the underlying div because of all the wrapper components below.\n        ...attrs,\n        ref: internalDialogRef,\n        id,\n        role: 'dialog',\n        'aria-modal': dialogState.value === DialogStates.Open ? true : undefined,\n        'aria-labelledby': titleId.value,\n        'aria-describedby': describedby.value,\n        onClick: handleClick,\n      }\n      let { open: _, initialFocus, ...incomingProps } = props\n\n      let slot = { open: dialogState.value === DialogStates.Open }\n\n      return h(ForcePortalRoot, { force: true }, () =>\n        h(Portal, () =>\n          h(PortalGroup, { target: internalDialogRef.value }, () =>\n            h(ForcePortalRoot, { force: false }, () =>\n              render({\n                props: { ...incomingProps, ...ourProps },\n                slot,\n                attrs,\n                slots,\n                visible: visible.value,\n                features: Features.RenderStrategy | Features.Static,\n                name: 'Dialog',\n              })\n            )\n          )\n        )\n      )\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    function handleClick(event: MouseEvent) {\n      if (event.target !== event.currentTarget) return\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    }\n\n    return () => {\n      let ourProps = {\n        id,\n        'aria-hidden': true,\n        onClick: handleClick,\n      }\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogOverlay',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogBackdrop = defineComponent({\n  name: 'DialogBackdrop',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  inheritAttrs: false,\n  setup(props, { attrs, slots, expose }) {\n    let api = useDialogContext('DialogBackdrop')\n    let id = `headlessui-dialog-backdrop-${useId()}`\n    let internalBackdropRef = ref(null)\n\n    expose({ el: internalBackdropRef, $el: internalBackdropRef })\n\n    onMounted(() => {\n      if (api.panelRef.value === null) {\n        throw new Error(\n          `A <DialogBackdrop /> component is being used, but a <DialogPanel /> component is missing.`\n        )\n      }\n    })\n\n    return () => {\n      let incomingProps = props\n      let ourProps = {\n        id,\n        ref: internalBackdropRef,\n        'aria-hidden': true,\n      }\n\n      return h(ForcePortalRoot, { force: true }, () =>\n        h(Portal, () =>\n          render({\n            props: { ...attrs, ...incomingProps, ...ourProps },\n            slot: { open: api.dialogState.value === DialogStates.Open },\n            attrs,\n            slots,\n            name: 'DialogBackdrop',\n          })\n        )\n      )\n    }\n  },\n})\n\n// ---\n\nexport let DialogPanel = defineComponent({\n  name: 'DialogPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useDialogContext('DialogPanel')\n    let id = `headlessui-dialog-panel-${useId()}`\n\n    return () => {\n      let ourProps = {\n        id,\n        ref: api.panelRef,\n      }\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogPanel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return () => {\n      let ourProps = { id }\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogTitle',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n", "import {\n  computed,\n  onMounted,\n  ref,\n  watch,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { getOwnerDocument } from '../utils/owner'\nimport { useEventListener } from './use-event-listener'\nimport { dom } from '../utils/dom'\n\nexport enum Features {\n  /** No features enabled for the `useFocusTrap` hook. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the component that uses this `useFocusTrap` hook. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport function useFocusTrap(\n  container: Ref<HTMLElement | null>,\n  features: Ref<Features> = ref(Features.All),\n  options: Ref<{\n    initialFocus?: Ref<HTMLElement | null>\n    containers?: Ref<Set<Ref<HTMLElement | null>>>\n  }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(null)\n  let previousActiveElement = ref<HTMLElement | null>(null)\n  // Deliberately not using a ref, we don't want to trigger re-renders.\n  let mounted = { value: false }\n\n  let featuresRestoreFocus = computed(() => Boolean(features.value & Features.RestoreFocus))\n  let featuresInitialFocus = computed(() => Boolean(features.value & Features.InitialFocus))\n\n  let ownerDocument = computed(() => getOwnerDocument(container))\n\n  onMounted(() => {\n    // Capture the currently focused element, before we enable the focus trap.\n    watch(\n      featuresRestoreFocus,\n      (newValue, prevValue) => {\n        if (newValue === prevValue) return\n        if (!featuresRestoreFocus.value) return\n\n        mounted.value = true\n\n        if (!restoreElement.value) {\n          restoreElement.value = ownerDocument.value?.activeElement as HTMLElement\n        }\n      },\n      { immediate: true }\n    )\n\n    // Restore the focus when we unmount the component.\n    watch(\n      featuresRestoreFocus,\n      (newValue, prevValue, onInvalidate) => {\n        if (newValue === prevValue) return\n        if (!featuresRestoreFocus.value) return\n\n        onInvalidate(() => {\n          if (mounted.value === false) return\n          mounted.value = false\n\n          focusElement(restoreElement.value)\n          restoreElement.value = null\n        })\n      },\n      { immediate: true }\n    )\n\n    // Handle initial focus\n    watch(\n      [container, options, options.value.initialFocus, featuresInitialFocus],\n      (newValues, prevValues) => {\n        if (newValues.every((value, idx) => prevValues?.[idx] === value)) return\n        if (!featuresInitialFocus.value) return\n\n        let containerElement = container.value\n        if (!containerElement) return\n\n        let initialFocusElement = dom(options.value.initialFocus)\n\n        let activeElement = ownerDocument.value?.activeElement as HTMLElement\n\n        if (initialFocusElement) {\n          if (initialFocusElement === activeElement) {\n            previousActiveElement.value = activeElement\n            return // Initial focus ref is already the active element\n          }\n        } else if (containerElement.contains(activeElement)) {\n          previousActiveElement.value = activeElement\n          return // Already focused within Dialog\n        }\n\n        // Try to focus the initialFocus ref\n        if (initialFocusElement) {\n          focusElement(initialFocusElement)\n        } else {\n          if (focusIn(containerElement, Focus.First) === FocusResult.Error) {\n            console.warn('There are no focusable elements inside the <FocusTrap />')\n          }\n        }\n\n        previousActiveElement.value = ownerDocument.value?.activeElement as HTMLElement\n      },\n      { immediate: true }\n    )\n  })\n\n  // Handle Tab & Shift+Tab keyboard events\n  useEventListener(ownerDocument.value?.defaultView, 'keydown', (event) => {\n    if (!(features.value & Features.TabLock)) return\n\n    if (!container.value) return\n    if (event.key !== Keys.Tab) return\n\n    event.preventDefault()\n\n    if (\n      focusIn(\n        container.value,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      ) === FocusResult.Success\n    ) {\n      previousActiveElement.value = ownerDocument.value?.activeElement as HTMLElement\n    }\n  })\n\n  // Prevent programmatically escaping\n  useEventListener(\n    ownerDocument.value?.defaultView,\n    'focus',\n    (event) => {\n      if (!(features.value & Features.FocusLock)) return\n\n      let allContainers = new Set(options.value.containers?.value)\n      allContainers.add(container)\n\n      if (!allContainers.size) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n      if (!mounted.value) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n\n  return restoreElement\n}\n\nfunction contains(containers: Set<Ref<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.value?.contains(element)) return true\n  }\n\n  return false\n}\n", "import { watchEffect } from 'vue'\n\nexport function useEventListener<TType extends keyof WindowEventMap>(\n  element: HTMLElement | Document | Window | EventTarget | null | undefined,\n  type: TType,\n  listener: (event: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (typeof window === 'undefined') return\n\n  watchEffect((onInvalidate) => {\n    element = element ?? window\n\n    element.addEventListener(type, listener as any, options)\n    onInvalidate(() => element!.removeEventListener(type, listener as any, options))\n  })\n}\n", "import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\nimport { getOwnerDocument } from '../utils/owner'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect((onInvalidate) => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n    let ownerDocument = getOwnerDocument(element)\n    if (!ownerDocument) return\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    ownerDocument.querySelectorAll(CHILDREN_SELECTOR).forEach((child) => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        ownerDocument!.querySelectorAll(CHILDREN_SELECTOR).forEach((child) => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n", "import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  computed,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { getOwnerDocument } from '../../utils/owner'\n\n// ---\n\nfunction getPortalRoot(contextElement?: Element | null) {\n  let ownerDocument = getOwnerDocument(contextElement)\n  if (!ownerDocument) {\n    throw new Error(\n      `[Headless UI]: Cannot find ownerDocument for contextElement: ${contextElement}`\n    )\n  }\n  let existingRoot = ownerDocument.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = ownerDocument.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return ownerDocument.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let element = ref<HTMLElement | null>(null)\n    let ownerDocument = computed(() => getOwnerDocument(element))\n\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot(element.value)\n        : groupContext == null\n        ? getPortalRoot(element.value)\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext == null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    onUnmounted(() => {\n      let root = ownerDocument.value?.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let ourProps = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...ourProps },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...incomingProps } = props\n\n      return render({ props: incomingProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...incomingProps } = props\n      return render({ props: incomingProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n", "import {\n  inject,\n  provide,\n  onMounted,\n  onUnmounted,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, type: string, element: Ref<HTMLElement | null>) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useStackProvider({\n  type,\n  element,\n  onUpdate,\n}: {\n  type: string\n  element: Ref<HTMLElement | null>\n  onUpdate?: OnUpdate\n}) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  onMounted(() => {\n    notify(StackMessage.Add, type, element)\n\n    onUnmounted(() => {\n      notify(StackMessage.Remove, type, element)\n    })\n  })\n\n  provide(StackContext, notify)\n}\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  setup(myProps, { attrs, slots }) {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return () => {\n      let { name = 'Description', slot = ref({}), props = {} } = context\n      let incomingProps = myProps\n      let ourProps = {\n        ...Object.entries(props).reduce(\n          (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n          {}\n        ),\n        id,\n      }\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot: slot.value,\n        attrs,\n        slots,\n        name,\n      })\n    }\n  },\n})\n", "// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n} from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panel: Ref<HTMLElement | null>\n  panelId: string\n  button: Ref<HTMLButtonElement | null>\n  buttonId: string\n\n  // State mutators\n  toggleDisclosure(): void\n  closeDisclosure(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\nlet DisclosurePanelContext = Symbol('DisclosurePanelContext') as InjectionKey<string | null>\nfunction useDisclosurePanelContext() {\n  return inject(DisclosurePanelContext, null)\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panel']['value']>(null)\n    let buttonRef = ref<StateDefinition['button']['value']>(null)\n\n    let api = {\n      buttonId,\n      panelId,\n      disclosureState,\n      panel: panelRef,\n      button: buttonRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n      closeDisclosure() {\n        if (disclosureState.value === DisclosureStates.Closed) return\n        disclosureState.value = DisclosureStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closeDisclosure()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...incomingProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open, close: api.close }\n      return render({ props: incomingProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let panelContext = useDisclosurePanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    let internalButtonRef = ref<HTMLButtonElement | null>(null)\n\n    expose({ el: internalButtonRef, $el: internalButtonRef })\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = internalButtonRef.value\n      })\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      internalButtonRef\n    )\n\n    function handleClick() {\n      if (props.disabled) return\n\n      if (isWithinPanel) {\n        api.toggleDisclosure()\n        dom(api.button)?.focus()\n      } else {\n        api.toggleDisclosure()\n      }\n    }\n    function handleKeyDown(event: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (isWithinPanel) {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            dom(api.button)?.focus()\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            break\n        }\n      }\n    }\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    return () => {\n      let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n      let ourProps = isWithinPanel\n        ? {\n            ref: internalButtonRef,\n            type: type.value,\n            onClick: handleClick,\n            onKeydown: handleKeyDown,\n          }\n        : {\n            id: api.buttonId,\n            ref: internalButtonRef,\n            type: type.value,\n            'aria-expanded': props.disabled\n              ? undefined\n              : api.disclosureState.value === DisclosureStates.Open,\n            'aria-controls': dom(api.panel) ? api.panelId : undefined,\n            disabled: props.disabled ? true : undefined,\n            onClick: handleClick,\n            onKeydown: handleKeyDown,\n            onKeyup: handleKeyUp,\n          }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'DisclosureButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    expose({ el: api.panel, $el: api.panel })\n\n    provide(DisclosurePanelContext, api.panelId)\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.disclosureState.value === DisclosureStates.Open, close: api.close }\n      let ourProps = { id: api.panelId, ref: api.panel }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'DisclosurePanel',\n      })\n    }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let container = ref<HTMLElement | null>(null)\n\n    expose({ el: container, $el: container })\n\n    let focusTrapOptions = computed(() => ({ initialFocus: ref(props.initialFocus) }))\n    useFocusTrap(container, FocusTrap.All, focusTrapOptions)\n\n    return () => {\n      let slot = {}\n      let ourProps = { ref: container }\n      let { initialFocus, ...incomingProps } = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'FocusTrap',\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n  watch,\n  watchEffect,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n  UnwrapNestedRefs,\n} from 'vue'\n\nimport { Features, render, omit, compact } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { FocusableMode, isFocusableElement, sortByDomNode } from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { VisuallyHidden } from '../../internal/visually-hidden'\nimport { objectToFormEntries } from '../../utils/form'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nenum ValueMode {\n  Single,\n  Multi,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionData = {\n  textValue: string\n  disabled: boolean\n  value: unknown\n  domRef: Ref<HTMLElement | null>\n}\n\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  orientation: Ref<'vertical' | 'horizontal'>\n\n  mode: ComputedRef<ValueMode>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ComputedRef<ListboxOptionData> }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ComputedRef<ListboxOptionData>): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    horizontal: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n    name: { type: String, optional: true },\n    multiple: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n\n    function adjustOrderedState(\n      adjustment: (\n        options: UnwrapNestedRefs<StateDefinition['options']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['options']['value']> = (i) => i\n    ) {\n      let currentActiveOption =\n        activeOptionIndex.value !== null ? options.value[activeOptionIndex.value] : null\n\n      let sortedOptions = sortByDomNode(adjustment(options.value.slice()), (option) =>\n        dom(option.dataRef.domRef)\n      )\n\n      // If we inserted an option before the current active option then the active option index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveOptionIndex = currentActiveOption\n        ? sortedOptions.indexOf(currentActiveOption)\n        : null\n\n      // Reset to `null` in case the currentActiveOption was removed.\n      if (adjustedActiveOptionIndex === -1) {\n        adjustedActiveOptionIndex = null\n      }\n\n      return {\n        options: sortedOptions,\n        activeOptionIndex: adjustedActiveOptionIndex,\n      }\n    }\n\n    let value = computed(() => props.modelValue)\n    let mode = computed(() => (props.multiple ? ValueMode.Multi : ValueMode.Single))\n\n    let api = {\n      listboxState,\n      value,\n      mode,\n      orientation: computed(() => (props.horizontal ? 'horizontal' : 'vertical')),\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      activationTrigger,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let adjustedState = adjustOrderedState()\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.options,\n            resolveActiveIndex: () => adjustedState.activeOptionIndex,\n            resolveId: (option) => option.id,\n            resolveDisabled: (option) => option.dataRef.disabled,\n          }\n        )\n\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        options.value = adjustedState.options\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let wasAlreadySearching = searchQuery.value !== ''\n        let offset = wasAlreadySearching ? 0 : 1\n\n        searchQuery.value += value.toLowerCase()\n\n        let reOrderedOptions =\n          activeOptionIndex.value !== null\n            ? options.value\n                .slice(activeOptionIndex.value + offset)\n                .concat(options.value.slice(0, activeOptionIndex.value + offset))\n            : options.value\n\n        let matchingOption = reOrderedOptions.find(\n          (option) =>\n            option.dataRef.textValue.startsWith(searchQuery.value) && !option.dataRef.disabled\n        )\n\n        let matchIdx = matchingOption ? options.value.indexOf(matchingOption) : -1\n        if (matchIdx === -1 || matchIdx === activeOptionIndex.value) return\n\n        activeOptionIndex.value = matchIdx\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionData) {\n        let adjustedState = adjustOrderedState((options) => {\n          return [...options, { id, dataRef }]\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n      },\n      unregisterOption(id: string) {\n        let adjustedState = adjustOrderedState((options) => {\n          let idx = options.findIndex((a) => a.id === id)\n          if (idx !== -1) options.splice(idx, 1)\n          return options\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        emit(\n          'update:modelValue',\n          match(mode.value, {\n            [ValueMode.Single]: () => value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(value)\n\n              let idx = copy.indexOf(raw)\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick([buttonRef, optionsRef], (event, target) => {\n      if (listboxState.value !== ListboxStates.Open) return\n\n      api.closeListbox()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(buttonRef)?.focus()\n      }\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let { name, modelValue, disabled, ...incomingProps } = props\n\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled }\n\n      return h(Fragment, [\n        ...(name != null && modelValue != null\n          ? objectToFormEntries({ [name]: modelValue }).map(([name, value]) =>\n              h(\n                VisuallyHidden,\n                compact({\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            )\n          : []),\n        render({\n          props: omit(incomingProps, ['onUpdate:modelValue', 'horizontal', 'multiple']),\n          slot,\n          slots,\n          attrs,\n          name: 'Listbox',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  setup(props, { attrs, slots }) {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    function handleClick() {\n      dom(api.buttonRef)?.focus({ preventScroll: true })\n    }\n\n    return () => {\n      let slot = {\n        open: api.listboxState.value === ListboxStates.Open,\n        disabled: api.disabled.value,\n      }\n      let ourProps = { id, ref: api.labelRef, onClick: handleClick }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxLabel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = {\n        open: api.listboxState.value === ListboxStates.Open,\n        disabled: api.disabled.value,\n      }\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        'aria-haspopup': true,\n        'aria-controls': dom(api.optionsRef)?.id,\n        'aria-expanded': api.disabled.value\n          ? undefined\n          : api.listboxState.value === ListboxStates.Open,\n        'aria-labelledby': api.labelRef.value ? [dom(api.labelRef)?.id, id].join(' ') : undefined,\n        disabled: api.disabled.value === true ? true : undefined,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        onClick: handleClick,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    expose({ el: api.optionsRef, $el: api.optionsRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let activeOption = api.options.value[api.activeOptionIndex.value]\n            api.select(activeOption.dataRef.value)\n          }\n          if (api.mode.value === ValueMode.Single) {\n            api.closeListbox()\n            nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          }\n          break\n\n        case match(api.orientation.value, {\n          vertical: Keys.ArrowDown,\n          horizontal: Keys.ArrowRight,\n        }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case match(api.orientation.value, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.listboxState.value === ListboxStates.Open }\n      let ourProps = {\n        'aria-activedescendant':\n          api.activeOptionIndex.value === null\n            ? undefined\n            : api.options.value[api.activeOptionIndex.value]?.id,\n        'aria-multiselectable': api.mode.value === ValueMode.Multi ? true : undefined,\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        'aria-orientation': api.orientation.value,\n        id,\n        onKeydown: handleKeyDown,\n        role: 'listbox',\n        tabIndex: 0,\n        ref: api.optionsRef,\n      }\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'ListboxOptions',\n      })\n    }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n    let internalOptionRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalOptionRef, $el: internalOptionRef })\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() =>\n      match(api.mode.value, {\n        [ValueMode.Single]: () => toRaw(api.value.value) === toRaw(props.value),\n        [ValueMode.Multi]: () => (toRaw(api.value.value) as unknown[]).includes(toRaw(props.value)),\n      })\n    )\n    let isFirstSelected = computed(() => {\n      return match(api.mode.value, {\n        [ValueMode.Multi]: () => {\n          let currentValues = toRaw(api.value.value) as unknown[]\n\n          return (\n            api.options.value.find((option) => currentValues.includes(option.dataRef.value))?.id ===\n            id\n          )\n        },\n        [ValueMode.Single]: () => selected.value,\n      })\n    })\n\n    let dataRef = computed<ListboxOptionData>(() => ({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n      domRef: internalOptionRef,\n    }))\n    onMounted(() => {\n      let textValue = dom(internalOptionRef)?.textContent?.toLowerCase().trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n\n          match(api.mode.value, {\n            [ValueMode.Multi]: () => {\n              if (isFirstSelected.value) api.goToOption(Focus.Specific, id)\n            },\n            [ValueMode.Single]: () => {\n              api.goToOption(Focus.Specific, id)\n            },\n          })\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalOptionRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      if (api.mode.value === ValueMode.Single) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let ourProps = {\n        id,\n        ref: internalOptionRef,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        // According to the WAI-ARIA best practices, we should use aria-checked for\n        // multi-select,but Voice-Over disagrees. So we use aria-checked instead for\n        // both single and multi-select.\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...omit(props, ['value', 'disabled']), ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n  ComputedRef,\n  UnwrapNestedRefs,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { FocusableMode, isFocusableElement, sortByDomNode } from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemData = {\n  textValue: string\n  disabled: boolean\n  domRef: Ref<HTMLElement | null>\n}\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: ComputedRef<MenuItemData> }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: ComputedRef<MenuItemData>): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n\n    function adjustOrderedState(\n      adjustment: (\n        items: UnwrapNestedRefs<StateDefinition['items']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['items']['value']> = (i) => i\n    ) {\n      let currentActiveItem =\n        activeItemIndex.value !== null ? items.value[activeItemIndex.value] : null\n\n      let sortedItems = sortByDomNode(adjustment(items.value.slice()), (item) =>\n        dom(item.dataRef.domRef)\n      )\n\n      // If we inserted an item before the current active item then the active item index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveItemIndex = currentActiveItem\n        ? sortedItems.indexOf(currentActiveItem)\n        : null\n\n      // Reset to `null` in case the currentActiveItem was removed.\n      if (adjustedActiveItemIndex === -1) {\n        adjustedActiveItemIndex = null\n      }\n\n      return {\n        items: sortedItems,\n        activeItemIndex: adjustedActiveItemIndex,\n      }\n    }\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      activationTrigger,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        let adjustedState = adjustOrderedState()\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.items,\n            resolveActiveIndex: () => adjustedState.activeItemIndex,\n            resolveId: (item) => item.id,\n            resolveDisabled: (item) => item.dataRef.disabled,\n          }\n        )\n\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        items.value = adjustedState.items\n      },\n      search(value: string) {\n        let wasAlreadySearching = searchQuery.value !== ''\n        let offset = wasAlreadySearching ? 0 : 1\n        searchQuery.value += value.toLowerCase()\n\n        let reOrderedItems =\n          activeItemIndex.value !== null\n            ? items.value\n                .slice(activeItemIndex.value + offset)\n                .concat(items.value.slice(0, activeItemIndex.value + offset))\n            : items.value\n\n        let matchingItem = reOrderedItems.find(\n          (item) => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        let matchIdx = matchingItem ? items.value.indexOf(matchingItem) : -1\n        if (matchIdx === -1 || matchIdx === activeItemIndex.value) return\n\n        activeItemIndex.value = matchIdx\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemData) {\n        let adjustedState = adjustOrderedState((items) => {\n          return [...items, { id, dataRef }]\n        })\n\n        items.value = adjustedState.items\n        activeItemIndex.value = adjustedState.activeItemIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      unregisterItem(id: string) {\n        let adjustedState = adjustOrderedState((items) => {\n          let idx = items.findIndex((a) => a.id === id)\n          if (idx !== -1) items.splice(idx, 1)\n          return items\n        })\n\n        items.value = adjustedState.items\n        activeItemIndex.value = adjustedState.activeItemIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick([buttonRef, itemsRef], (event, target) => {\n      if (menuState.value !== MenuStates.Open) return\n\n      api.closeMenu()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(buttonRef)?.focus()\n      }\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = { open: api.menuState.value === MenuStates.Open }\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        'aria-haspopup': true,\n        'aria-controls': dom(api.itemsRef)?.id,\n        'aria-expanded': props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        onClick: handleClick,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuButton',\n      })\n    }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    expose({ el: api.itemsRef, $el: api.itemsRef })\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let activeItem = api.items.value[api.activeItemIndex.value]\n            let _activeItem = activeItem as unknown as UnwrapNestedRefs<typeof activeItem>\n            dom(_activeItem.dataRef.domRef)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.menuState.value === MenuStates.Open }\n      let ourProps = {\n        'aria-activedescendant':\n          api.activeItemIndex.value === null\n            ? undefined\n            : api.items.value[api.activeItemIndex.value]?.id,\n        'aria-labelledby': dom(api.buttonRef)?.id,\n        id,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        role: 'menu',\n        tabIndex: 0,\n        ref: api.itemsRef,\n      }\n\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'MenuItems',\n      })\n    }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n    let internalItemRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalItemRef, $el: internalItemRef })\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = computed<MenuItemData>(() => ({\n      disabled: props.disabled,\n      textValue: '',\n      domRef: internalItemRef,\n    }))\n    onMounted(() => {\n      let textValue = dom(internalItemRef)?.textContent?.toLowerCase().trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalItemRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled }\n      let ourProps = {\n        id,\n        ref: internalItemRef,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useEventListener } from '../../hooks/use-event-listener'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let internalPopoverRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalPopoverRef, $el: internalPopoverRef })\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n    let ownerDocument = computed(() => getOwnerDocument(internalPopoverRef))\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closePopover()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (ownerDocument.value?.activeElement &&\n          (dom(button)?.contains(ownerDocument.value.activeElement) ||\n            dom(panel)?.contains(ownerDocument.value.activeElement)))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useEventListener(\n      ownerDocument.value?.defaultView,\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useOutsideClick([button, panel], (event, target) => {\n      if (popoverState.value !== PopoverStates.Open) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open, close: api.close }\n      return render({\n        props: {\n          ...props,\n          ref: internalPopoverRef,\n        },\n        slot,\n        slots,\n        attrs,\n        name: 'Popover',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = usePopoverContext('PopoverButton')\n    let ownerDocument = computed(() => getOwnerDocument(api.button))\n\n    expose({ el: api.button, $el: api.button })\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>()\n\n    useEventListener(\n      ownerDocument.value?.defaultView,\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = ownerDocument.value?.activeElement as HTMLElement\n      },\n      true\n    )\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      elementRef\n    )\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (isWithinPanel) {\n        if (api.popoverState.value === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            // @ts-expect-error\n            event.target.click?.()\n            api.closePopover()\n            dom(api.button)?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n            api.togglePopover()\n            break\n\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n            if (!dom(api.button)) return\n            if (\n              ownerDocument.value?.activeElement &&\n              !dom(api.button)?.contains(ownerDocument.value.activeElement)\n            )\n              return\n            event.preventDefault()\n            event.stopPropagation()\n            api.closePopover()\n            break\n\n          case Keys.Tab:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!api.panel) return\n            if (!api.button) return\n\n            // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n            if (event.shiftKey) {\n              // Check if the last focused element exists, and check that it is not inside button or panel itself\n              if (!previousActiveElementRef.value) return\n              if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n              if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n              // Check if the last focused element is *after* the button in the DOM\n              let focusableElements = getFocusableElements(ownerDocument.value?.body)\n              let previousIdx = focusableElements.indexOf(\n                previousActiveElementRef.value as HTMLElement\n              )\n              let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n              if (buttonIdx > previousIdx) return\n\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(dom(api.panel)!, Focus.Last)\n            } else {\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(dom(api.panel)!, Focus.First)\n            }\n\n            break\n        }\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      if (isWithinPanel) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n      if (!api.button) return\n\n      // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n      switch (event.key) {\n        case Keys.Tab:\n          // Check if the last focused element exists, and check that it is not inside button or panel itself\n          if (!previousActiveElementRef.value) return\n          if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n          if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n          // Check if the last focused element is *after* the button in the DOM\n          let focusableElements = getFocusableElements(ownerDocument.value?.body)\n          let previousIdx = focusableElements.indexOf(previousActiveElementRef.value as HTMLElement)\n          let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n          if (buttonIdx > previousIdx) return\n\n          event.preventDefault()\n          event.stopPropagation()\n          focusIn(dom(api.panel)!, Focus.Last)\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (isWithinPanel) {\n        api.closePopover()\n        dom(api.button)?.focus() // Re-focus the original opening Button\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n        dom(api.button)?.focus()\n        api.togglePopover()\n      }\n    }\n\n    return () => {\n      let slot = { open: api.popoverState.value === PopoverStates.Open }\n      let ourProps = isWithinPanel\n        ? {\n            ref: elementRef,\n            type: type.value,\n            onKeydown: handleKeyDown,\n            onClick: handleClick,\n          }\n        : {\n            ref: elementRef,\n            id: api.buttonId,\n            type: type.value,\n            'aria-expanded': props.disabled\n              ? undefined\n              : api.popoverState.value === PopoverStates.Open,\n            'aria-controls': dom(api.panel) ? api.panelId : undefined,\n            disabled: props.disabled ? true : undefined,\n            onKeydown: handleKeyDown,\n            onKeyup: handleKeyUp,\n            onClick: handleClick,\n          }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs: attrs,\n        slots: slots,\n        name: 'PopoverButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots }) {\n    let api = usePopoverContext('PopoverOverlay')\n    let id = `headlessui-popover-overlay-${useId()}`\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    function handleClick() {\n      api.closePopover()\n    }\n\n    return () => {\n      let slot = { open: api.popoverState.value === PopoverStates.Open }\n      let ourProps = {\n        id,\n        'aria-hidden': true,\n        onClick: handleClick,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'PopoverOverlay',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n    let ownerDocument = computed(() => getOwnerDocument(api.panel))\n\n    expose({ el: api.panel, $el: api.panel })\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = ownerDocument.value?.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useEventListener(ownerDocument.value?.defaultView, 'keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!ownerDocument.value?.activeElement) return\n      if (!dom(api.panel)?.contains(ownerDocument.value.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on whether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements(ownerDocument.value.body)\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter((element) => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(ownerDocument.value.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useEventListener(\n      ownerDocument.value?.defaultView,\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (\n          ownerDocument.value?.activeElement &&\n          dom(api.panel)?.contains(ownerDocument.value.activeElement as HTMLElement)\n        )\n          return\n        api.closePopover()\n      },\n      true\n    )\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Escape:\n          if (api.popoverState.value !== PopoverStates.Open) return\n          if (!dom(api.panel)) return\n          if (ownerDocument.value && !dom(api.panel)?.contains(ownerDocument.value.activeElement))\n            return\n          event.preventDefault()\n          event.stopPropagation()\n          api.closePopover()\n          dom(api.button)?.focus()\n          break\n      }\n    }\n\n    return () => {\n      let slot = {\n        open: api.popoverState.value === PopoverStates.Open,\n        close: api.close,\n      }\n\n      let ourProps = {\n        ref: api.panel,\n        id: api.panelId,\n        onKeydown: handleKeyDown,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'PopoverPanel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n    let ownerDocument = computed(() => getOwnerDocument(groupRef))\n\n    expose({ el: groupRef, $el: groupRef })\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let owner = ownerDocument.value\n      if (!owner) return false\n      let element = owner.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some((bag) => {\n        return (\n          owner!.getElementById(bag.buttonId)?.contains(element) ||\n          owner!.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return () => {\n      let ourProps = { ref: groupRef }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot: {},\n        attrs,\n        slots,\n        name: 'PopoverGroup',\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult, sortByDomNode } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { compact, omit, render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { VisuallyHidden } from '../../internal/visually-hidden'\nimport { attemptSubmit, objectToFormEntries } from '../../utils/form'\nimport { getOwnerDocument } from '../../utils/owner'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n    name: { type: String, optional: true },\n  },\n  inheritAttrs: false,\n  setup(props, { emit, attrs, slots, expose }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    expose({ el: radioGroupRef, $el: radioGroupRef })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find((option) => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some((option) => toRaw(option.propsRef.value) === toRaw(props.modelValue))\n      ),\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (value.value === nextValue) return false\n        let nextOption = options.value.find(\n          (option) => toRaw(option.propsRef.value) === toRaw(nextValue)\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        emit('update:modelValue', nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        options.value.push(action)\n        options.value = sortByDomNode(options.value, (option) => option.element)\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex((radio) => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter((option) => option.propsRef.disabled === false)\n        .map((radio) => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.Enter:\n          attemptSubmit(event.currentTarget as unknown as EventTarget & HTMLButtonElement)\n          break\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                (option) => option.element === getOwnerDocument(radioGroupRef)?.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                (option) => option.element === getOwnerDocument(option.element)?.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              (option) => option.element === getOwnerDocument(option.element)?.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return () => {\n      let { modelValue, disabled, name, ...incomingProps } = props\n\n      let ourProps = {\n        ref: radioGroupRef,\n        id,\n        role: 'radiogroup',\n        'aria-labelledby': labelledby.value,\n        'aria-describedby': describedby.value,\n        onKeydown: handleKeyDown,\n      }\n\n      return h(Fragment, [\n        ...(name != null && modelValue != null\n          ? objectToFormEntries({ [name]: modelValue }).map(([name, value]) =>\n              h(\n                VisuallyHidden,\n                compact({\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            )\n          : []),\n        render({\n          props: { ...attrs, ...incomingProps, ...ourProps },\n          slot: {},\n          attrs,\n          slots,\n          name: 'RadioGroup',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    expose({ el: optionRef, $el: optionRef })\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => toRaw(api.value.value) === toRaw(props.value))\n    let tabIndex = computed(() => {\n      if (disabled.value) return -1\n      if (checked.value) return 0\n      if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n      return -1\n    })\n\n    function handleClick() {\n      if (!api.change(props.value)) return\n\n      state.value |= OptionState.Active\n      optionRef.value?.focus()\n    }\n\n    function handleFocus() {\n      state.value |= OptionState.Active\n    }\n\n    function handleBlur() {\n      state.value &= ~OptionState.Active\n    }\n\n    return () => {\n      let incomingProps = omit(props, ['value', 'disabled'])\n\n      let slot = {\n        checked: checked.value,\n        disabled: disabled.value,\n        active: Boolean(state.value & OptionState.Active),\n      }\n\n      let ourProps = {\n        id,\n        ref: optionRef,\n        role: 'radio',\n        'aria-checked': checked.value ? 'true' : 'false',\n        'aria-labelledby': labelledby.value,\n        'aria-describedby': describedby.value,\n        'aria-disabled': disabled.value ? true : undefined,\n        tabIndex: tabIndex.value,\n        onClick: disabled.value ? undefined : handleClick,\n        onFocus: disabled.value ? undefined : handleFocus,\n        onBlur: disabled.value ? undefined : handleBlur,\n      }\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'RadioGroupOption',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  setup(myProps, { slots, attrs }) {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return () => {\n      let { name = 'Label', slot = {}, props = {} } = context\n      let { passive, ...incomingProps } = myProps\n      let ourProps = {\n        ...Object.entries(props).reduce(\n          (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n          {}\n        ),\n        id,\n      }\n      let allProps = { ...incomingProps, ...ourProps }\n\n      // @ts-expect-error props are dynamic via context, some components will\n      //                  provide an onClick then we can delete it.\n      if (passive) delete allProps['onClick']\n\n      return render({\n        props: allProps,\n        slot,\n        attrs,\n        slots,\n        name,\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { render, compact } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { VisuallyHidden } from '../../internal/visually-hidden'\nimport { attemptSubmit } from '../../utils/form'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n    name: { type: String, optional: true },\n    value: { type: String, optional: true },\n  },\n  inheritAttrs: false,\n  setup(props, { emit, attrs, slots, expose }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    let internalSwitchRef = ref(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      switchRef\n    )\n\n    expose({ el: switchRef, $el: switchRef })\n\n    function handleClick(event: MouseEvent) {\n      event.preventDefault()\n      toggle()\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      if (event.key === Keys.Space) {\n        event.preventDefault()\n        toggle()\n      } else if (event.key === Keys.Enter) {\n        attemptSubmit(event.currentTarget as HTMLElement)\n      }\n    }\n\n    // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n    function handleKeyPress(event: KeyboardEvent) {\n      event.preventDefault()\n    }\n\n    return () => {\n      let { name, value, modelValue, ...incomingProps } = props\n      let slot = { checked: modelValue }\n      let ourProps = {\n        id,\n        ref: switchRef,\n        role: 'switch',\n        type: type.value,\n        tabIndex: 0,\n        'aria-checked': modelValue,\n        'aria-labelledby': api?.labelledby.value,\n        'aria-describedby': api?.describedby.value,\n        onClick: handleClick,\n        onKeyup: handleKeyUp,\n        onKeypress: handleKeyPress,\n      }\n\n      return h(Fragment, [\n        name != null && modelValue != null\n          ? h(\n              VisuallyHidden,\n              compact({\n                as: 'input',\n                type: 'checkbox',\n                hidden: true,\n                readOnly: true,\n                checked: modelValue,\n                name,\n                value,\n              })\n            )\n          : null,\n        render({\n          props: { ...attrs, ...incomingProps, ...ourProps },\n          slot,\n          attrs,\n          slots,\n          name: 'Switch',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { dom } from '../../utils/dom'\nimport { match } from '../../utils/match'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { FocusSentinel } from '../../internal/focus-sentinel'\n\ntype StateDefinition = {\n  // State\n  selectedIndex: Ref<number | null>\n  orientation: Ref<'vertical' | 'horizontal'>\n  activation: Ref<'auto' | 'manual'>\n\n  tabs: Ref<Ref<HTMLElement | null>[]>\n  panels: Ref<Ref<HTMLElement | null>[]>\n\n  // State mutators\n  setSelectedIndex(index: number): void\n  registerTab(tab: Ref<HTMLElement | null>): void\n  unregisterTab(tab: Ref<HTMLElement | null>): void\n  registerPanel(panel: Ref<HTMLElement | null>): void\n  unregisterPanel(panel: Ref<HTMLElement | null>): void\n}\n\nlet TabsContext = Symbol('TabsContext') as InjectionKey<StateDefinition>\n\nfunction useTabsContext(component: string) {\n  let context = inject(TabsContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <TabGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let TabGroup = defineComponent({\n  name: 'TabGroup',\n  emits: {\n    change: (_index: number) => true,\n  },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    selectedIndex: { type: [Number], default: null },\n    defaultIndex: { type: [Number], default: 0 },\n    vertical: { type: [Boolean], default: false },\n    manual: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let selectedIndex = ref<StateDefinition['selectedIndex']['value']>(null)\n    let tabs = ref<StateDefinition['tabs']['value']>([])\n    let panels = ref<StateDefinition['panels']['value']>([])\n\n    let api = {\n      selectedIndex,\n      orientation: computed(() => (props.vertical ? 'vertical' : 'horizontal')),\n      activation: computed(() => (props.manual ? 'manual' : 'auto')),\n      tabs,\n      panels,\n      setSelectedIndex(index: number) {\n        if (selectedIndex.value === index) return\n        selectedIndex.value = index\n        emit('change', index)\n      },\n      registerTab(tab: typeof tabs['value'][number]) {\n        if (!tabs.value.includes(tab)) tabs.value.push(tab)\n      },\n      unregisterTab(tab: typeof tabs['value'][number]) {\n        let idx = tabs.value.indexOf(tab)\n        if (idx !== -1) tabs.value.splice(idx, 1)\n      },\n      registerPanel(panel: typeof panels['value'][number]) {\n        if (!panels.value.includes(panel)) panels.value.push(panel)\n      },\n      unregisterPanel(panel: typeof panels['value'][number]) {\n        let idx = panels.value.indexOf(panel)\n        if (idx !== -1) panels.value.splice(idx, 1)\n      },\n    }\n\n    provide(TabsContext, api)\n\n    watchEffect(() => {\n      if (api.tabs.value.length <= 0) return\n      if (props.selectedIndex === null && selectedIndex.value !== null) return\n\n      let tabs = api.tabs.value.map((tab) => dom(tab)).filter(Boolean) as HTMLElement[]\n      let focusableTabs = tabs.filter((tab) => !tab.hasAttribute('disabled'))\n\n      let indexToSet = props.selectedIndex ?? props.defaultIndex\n\n      // Underflow\n      if (indexToSet < 0) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[0])\n      }\n\n      // Overflow\n      else if (indexToSet > api.tabs.value.length) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      }\n\n      // Middle\n      else {\n        let before = tabs.slice(0, indexToSet)\n        let after = tabs.slice(indexToSet)\n\n        let next = [...after, ...before].find((tab) => focusableTabs.includes(tab))\n        if (!next) return\n\n        selectedIndex.value = tabs.indexOf(next)\n      }\n    })\n\n    return () => {\n      let slot = { selectedIndex: selectedIndex.value }\n\n      return h(Fragment, [\n        h(FocusSentinel, {\n          onFocus: () => {\n            for (let tab of tabs.value) {\n              let el = dom(tab)\n              if (el?.tabIndex === 0) {\n                el.focus()\n                return true\n              }\n            }\n\n            return false\n          },\n        }),\n        render({\n          props: omit(props, ['selectedIndex', 'defaultIndex', 'manual', 'vertical', 'onChange']),\n          slot,\n          slots,\n          attrs,\n          name: 'TabGroup',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let TabList = defineComponent({\n  name: 'TabList',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useTabsContext('TabList')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      let ourProps = {\n        role: 'tablist',\n        'aria-orientation': api.orientation.value,\n      }\n      let incomingProps = props\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'TabList',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let Tab = defineComponent({\n  name: 'Tab',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useTabsContext('Tab')\n    let id = `headlessui-tabs-tab-${useId()}`\n\n    let internalTabRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalTabRef, $el: internalTabRef })\n\n    onMounted(() => api.registerTab(internalTabRef))\n    onUnmounted(() => api.unregisterTab(internalTabRef))\n\n    let myIndex = computed(() => api.tabs.value.indexOf(internalTabRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let list = api.tabs.value.map((tab) => dom(tab)).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        api.setSelectedIndex(myIndex.value)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(api.orientation.value, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    }\n\n    function handleFocus() {\n      dom(internalTabRef)?.focus()\n    }\n\n    function handleSelection() {\n      if (props.disabled) return\n\n      dom(internalTabRef)?.focus()\n      api.setSelectedIndex(myIndex.value)\n    }\n\n    // This is important because we want to only focus the tab when it gets focus\n    // OR it finished the click event (mouseup). However, if you perform a `click`,\n    // then you will first get the `focus` and then get the `click` event.\n    function handleMouseDown(event: MouseEvent) {\n      event.preventDefault()\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      internalTabRef\n    )\n\n    return () => {\n      let slot = { selected: selected.value }\n      let ourProps = {\n        ref: internalTabRef,\n        onKeydown: handleKeyDown,\n        onFocus: api.activation.value === 'manual' ? handleFocus : handleSelection,\n        onMousedown: handleMouseDown,\n        onClick: handleSelection,\n        id,\n        role: 'tab',\n        type: type.value,\n        'aria-controls': api.panels.value[myIndex.value]?.value?.id,\n        'aria-selected': selected.value,\n        tabIndex: selected.value ? 0 : -1,\n        disabled: props.disabled ? true : undefined,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        name: 'Tab',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let TabPanels = defineComponent({\n  name: 'TabPanels',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useTabsContext('TabPanels')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      return render({\n        props,\n        slot,\n        attrs,\n        slots,\n        name: 'TabPanels',\n      })\n    }\n  },\n})\n\nexport let TabPanel = defineComponent({\n  name: 'TabPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useTabsContext('TabPanel')\n    let id = `headlessui-tabs-panel-${useId()}`\n\n    let internalPanelRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalPanelRef, $el: internalPanelRef })\n\n    onMounted(() => api.registerPanel(internalPanelRef))\n    onUnmounted(() => api.unregisterPanel(internalPanelRef))\n\n    let myIndex = computed(() => api.panels.value.indexOf(internalPanelRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    return () => {\n      let slot = { selected: selected.value }\n      let ourProps = {\n        ref: internalPanelRef,\n        id,\n        role: 'tabpanel',\n        'aria-labelledby': api.tabs.value[myIndex.value]?.value?.id,\n        tabIndex: selected.value ? 0 : -1,\n      }\n\n      return render({\n        props: { ...props, ...ourProps },\n        slot,\n        attrs,\n        slots,\n        features: Features.Static | Features.RenderStrategy,\n        visible: selected.value,\n        name: 'TabPanel',\n      })\n    }\n  },\n})\n", "import { h, ref, defineComponent } from 'vue'\n\nimport { VisuallyHidden } from './visually-hidden'\n\nexport let FocusSentinel = defineComponent({\n  props: {\n    onFocus: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup(props) {\n    let enabled = ref(true)\n\n    return () => {\n      if (!enabled.value) return null\n\n      return h(VisuallyHidden, {\n        as: 'button',\n        type: 'button',\n        onFocus(event: FocusEvent) {\n          event.preventDefault()\n          let frame: ReturnType<typeof requestAnimationFrame>\n\n          let tries = 50\n          function forwardFocus() {\n            // Prevent infinite loops\n            if (tries-- <= 0) {\n              if (frame) cancelAnimationFrame(frame)\n              return\n            }\n\n            // Try to move focus to the correct element. This depends on the implementation\n            // of `onFocus` of course since it would be different for each place we use it in.\n            if (props.onFocus()) {\n              enabled.value = false\n              cancelAnimationFrame(frame)\n              return\n            }\n\n            // Retry\n            frame = requestAnimationFrame(forwardFocus)\n          }\n\n          frame = requestAnimationFrame(forwardFocus)\n        },\n      })\n    }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  ConcreteComponent,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, omit, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter((className) => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  setup(props, { emit, attrs, slots, expose }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return () =>\n        h(\n          TransitionRoot,\n          {\n            ...props,\n            onBeforeEnter: () => emit('beforeEnter'),\n            onAfterEnter: () => emit('afterEnter'),\n            onBeforeLeave: () => emit('beforeLeave'),\n            onAfterLeave: () => emit('afterLeave'),\n          },\n          slots\n        )\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    expose({ el: container, $el: container })\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              (reason) => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              (reason) => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let {\n        appear,\n        show,\n\n        // Class names\n        enter,\n        enterFrom,\n        enterTo,\n        entered,\n        leave,\n        leaveFrom,\n        leaveTo,\n        ...rest\n      } = props\n\n      let ourProps = { ref: container }\n      let incomingProps = rest\n\n      return render({\n        props: { ...incomingProps, ...ourProps },\n        slot: {},\n        slots,\n        attrs,\n        features: TransitionChildRenderFeatures,\n        visible: state.value === TreeStates.Visible,\n        name: 'TransitionChild',\n      })\n    }\n  },\n})\n\n// ---\n\n// This exists to work around typescript circular inference problem\nlet _TransitionChild = TransitionChild as ConcreteComponent\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  setup(props, { emit, attrs, slots }) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return () => {\n      let incomingProps = omit(props, ['show', 'appear', 'unmount'])\n      let sharedProps = { unmount: props.unmount }\n\n      return render({\n        props: {\n          ...sharedProps,\n          as: 'template',\n        },\n        slot: {},\n        slots: {\n          ...slots,\n          default: () => [\n            h(\n              _TransitionChild,\n              {\n                onBeforeEnter: () => emit('beforeEnter'),\n                onAfterEnter: () => emit('afterEnter'),\n                onBeforeLeave: () => emit('beforeLeave'),\n                onAfterLeave: () => emit('afterLeave'),\n                ...attrs,\n                ...sharedProps,\n                ...incomingProps,\n              },\n              slots.default\n            ),\n          ],\n        },\n        attrs: {},\n        features: TransitionChildRenderFeatures,\n        visible: state.value === TreeStates.Visible,\n        name: 'Transition',\n      })\n    }\n  },\n})\n", "export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n", "export function disposables() {\n  let disposables: Function[] = []\n  let queue: Function[] = []\n\n  let api = {\n    enqueue(fn: Function) {\n      queue.push(fn)\n    },\n\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n\n    async workQueue() {\n      for (let handle of queue.splice(0)) {\n        await handle()\n      }\n    },\n  }\n\n  return api\n}\n", "import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map((value) => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map((v) => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, (reason) => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n"],
  "mappings": "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",
  "names": []
}
