import{Fragment as x,computed as C,defineComponent as s,h as d,inject as E,provide as L,ref as f}from"vue";import{render as m,compact as V}from"../../utils/render.js";import{useId as j}from"../../hooks/use-id.js";import{Keys as y}from"../../keyboard.js";import{Label as G,useLabels as I}from"../label/label.js";import{Description as T,useDescriptions as B}from"../description/description.js";import{useResolveButtonType as H}from"../../hooks/use-resolve-button-type.js";import{VisuallyHidden as M}from"../../internal/visually-hidden.js";import{attemptSubmit as O}from"../../utils/form.js";let b=Symbol("GroupContext"),W=s({name:"SwitchGroup",props:{as:{type:[Object,String],default:"template"}},setup(l,{slots:a,attrs:i}){let n=f(null),u=I({name:"SwitchLabel",props:{onClick(){!n.value||(n.value.click(),n.value.focus({preventScroll:!0}))}}}),t=B({name:"SwitchDescription"});return L(b,{switchRef:n,labelledby:u,describedby:t}),()=>m({props:l,slot:{},slots:a,attrs:i,name:"SwitchGroup"})}}),X=s({name:"Switch",emits:{"update:modelValue":l=>!0},props:{as:{type:[Object,String],default:"button"},modelValue:{type:Boolean,default:!1},name:{type:String,optional:!0},value:{type:String,optional:!0}},inheritAttrs:!1,setup(l,{emit:a,attrs:i,slots:n,expose:u}){let t=E(b,null),p=`headlessui-switch-${j()}`;function c(){a("update:modelValue",!l.modelValue)}let h=f(null),o=t===null?h:t.switchRef,S=H(C(()=>({as:l.as,type:i.type})),o);u({el:o,$el:o});function w(e){e.preventDefault(),c()}function v(e){e.key===y.Space?(e.preventDefault(),c()):e.key===y.Enter&&O(e.currentTarget)}function g(e){e.preventDefault()}return()=>{let{name:e,value:R,modelValue:r,...k}=l,D={checked:r},K={id:p,ref:o,role:"switch",type:S.value,tabIndex:0,"aria-checked":r,"aria-labelledby":t==null?void 0:t.labelledby.value,"aria-describedby":t==null?void 0:t.describedby.value,onClick:w,onKeyup:v,onKeypress:g};return d(x,[e!=null&&r!=null?d(M,V({as:"input",type:"checkbox",hidden:!0,readOnly:!0,checked:r,name:e,value:R})):null,m({props:{...i,...k,...K},slot:D,attrs:i,slots:n,name:"Switch"})])}}}),Y=G,Z=T;export{X as Switch,Z as SwitchDescription,W as SwitchGroup,Y as SwitchLabel};
